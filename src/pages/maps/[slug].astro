---
import * as classes from "./_[slug].css";
import slugify from "../../slugify";
import Layout from "../../layouts/Layout.astro";
import MapViewer from "../../components/MapViewer";

import mapsJson from "../../../data/maps.json";
import { levelScenePairs } from "../../../ArknightsGameData/zh_CN/gamedata/battle/battle_misc_table.json";

import type * as OutputTypes from "../../output-types";
import { stageIdStore, tokensStore } from "./_store";

export function getStaticPaths() {
  return Object.entries(mapsJson).map(([stageId, stage]) => {
    return {
      params: {
        slug: slugify(stageId),
      },
      props: { stageId },
    };
  });
}

function getCorrectLevelId(levelId: string): string {
  return levelScenePairs[levelId as keyof typeof levelScenePairs]
    ? levelScenePairs[levelId as keyof typeof levelScenePairs].levelId
    : levelId;
}

const { stageId } = Astro.props;
const stageInfo = mapsJson[
  stageId as keyof typeof mapsJson
] as OutputTypes.StageInfo;
const locale = stageInfo.isCnOnly ? "zh_CN" : "en_US";

const stageData = await import(
  "../../../ArknightsGameData/" +
    locale +
    "/gamedata/levels/" +
    getCorrectLevelId(stageInfo.levelId).toLowerCase() +
    ".json"
) as OutputTypes.StageData;


// const getDefaultTokens = () => {
//   const rangeMapping = {
//     trap_001_crate: "MELEE",
//   }
//   const tokens: OutputTypes.DraggableToken[] = [];
//   stageData.predefines.tokenCards.forEach((token) => {
//     for (let index = 1; index < token.initialCnt; index++) {
//       tokens.push({
//         row: null,
//         col: null,
//         charId: token.inst.characterKey,
//         tokenId: token.inst.characterKey + "-" + index,
//         type: "token",
//         tokeObject: token,
//         range: rangeMapping[
//           token.inst.characterKey as keyof typeof rangeMapping
//         ] as "MELEE" | "RANGED",
//       });
//     }
//   });

//   return tokens;
// };

// tokensStore.set(getDefaultTokens())
---

<script slot="head" define:vars={{ stageId }}>
  window.stageId = stageId;
</script>

<Layout title={stageInfo.code}>
  <section class={classes.container}>
    <h2>
      {stageInfo.code}
    </h2>
    <MapViewer stageData={stageData} client:visible />
  </section>
</Layout>
