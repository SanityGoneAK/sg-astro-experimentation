---
import InterpunctSpacer from "../InterpunctSpacer/InterpunctSpacer.astro";
import TraitInfo from "../TraitInfo/TraitInfo.astro";
import {
  operatorAvatar,
  operatorBranchIcon,
  operatorClassIcon,
} from "../../utils/images";
import {
  professionToClass,
  subProfessionIdToSubclass,
} from "../../utils/classes";
import { getMeleeOrRangedOrBoth } from "./helpers";
import * as classes from "./styles.css";

import type * as OutputTypes from "../../output-types";

interface Props {
  character: OutputTypes.Character;
}

const { character } = Astro.props;
const [baseName, alterName] = character.name.split(/ the /i);
const operatorClass = professionToClass(character.profession);
---

<script>
  const toggleButton = document.getElementById(
    "trait-toggle"
  ) as HTMLButtonElement;
  const traitInfoContainer = document.getElementById(
    "trait-info-container"
  ) as HTMLDivElement;
  toggleButton.addEventListener("click", () => {
    traitInfoContainer.hasAttribute("hidden")
      ? traitInfoContainer.removeAttribute("hidden")
      : traitInfoContainer.setAttribute("hidden", "");
    toggleButton.getAttribute("aria-pressed") === "true"
      ? toggleButton.setAttribute("aria-pressed", "false")
      : toggleButton.setAttribute("aria-pressed", "true");
  });
</script>

<div class={classes.root}>
  <div class={classes.portraitNameRarity}>
    <img
      class={classes.portrait}
      src={operatorAvatar(character.charId)}
      alt=""
    />
    <div class={classes.name}>
      <h2 class={classes.baseName}>{baseName}</h2>
      {alterName && <h3 class={classes.alterName}>The {alterName}</h3>}
    </div>
    <!-- TODO rarity -->
  </div>

  <div class={classes.classBranchTraitToggle}>
    <div class={classes.classBranch}>
      <span class={classes.classBranchNameAndIconWrapper}>
        <img
          class={classes.classBranchIcon}
          src={operatorClassIcon(operatorClass.toLowerCase())}
          alt=""
        />
        {operatorClass}
      </span>
      <span class={classes.branchNameAndIconWrapper}>
        <img
          class={classes.classBranchIcon}
          src={operatorBranchIcon(character.subProfessionId)}
          alt=""
        />
        {subProfessionIdToSubclass(character.subProfessionId)}
      </span>
      <InterpunctSpacer class={classes.spacer} />
      <span class={classes.position}
        >{
          getMeleeOrRangedOrBoth(character.position, character.description)
        }</span
      >
    </div>

    <button
      id="trait-toggle"
      class={classes.traitToggle}
      aria-pressed="false"
      aria-controls="trait-info-container">Trait</button
    >
  </div>

  <TraitInfo
    hidden
    id="trait-info-container"
    class={classes.traitInfo}
    subProfessionId={character.subProfessionId}
  />
</div>
