---
import * as classes from "./styles.css";

interface Props {
  buttonId: string;
  containerId: string;
  initiallyVisible: boolean;
  class?: string;
}
const {
  buttonId,
  containerId,
  initiallyVisible,
  class: className,
  ...rest
} = Astro.props;
---

<button
  id={buttonId}
  aria-controls={containerId}
  aria-pressed={initiallyVisible}
  class={`${classes.root} ${className ?? ""}`}
  {...rest as any}
  ><slot />
</button>

<script define:vars={{ buttonId, containerId, initiallyVisible }}>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleButton = document.getElementById(buttonId);
    const container = document.getElementById(containerId);
    if (initiallyVisible) {
      toggleButton.setAttribute("aria-pressed", "true");
      container.removeAttribute("hidden");
    } else {
      toggleButton.setAttribute("aria-pressed", "false");
      container.setAttribute("hidden", "");
    }

    toggleButton.addEventListener("click", () => {
      container.hasAttribute("hidden")
        ? container.removeAttribute("hidden")
        : container.setAttribute("hidden", "");
      toggleButton.getAttribute("aria-pressed") === "true"
        ? toggleButton.setAttribute("aria-pressed", "false")
        : toggleButton.setAttribute("aria-pressed", "true");
    });
  });
</script>
